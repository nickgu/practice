
# simple config for pairwise-image network.
[image_pair]
input_def=f:4,f:4
label_def=i:1
layers=cost,f0,stack,pool1,reshape,relu,relu2,dot,softmax_in,out
active=out
cost=cost

learner=adam
learning_rate_type=exponential_decay
learning_rate=1e-3
learning_decay_ratio=0.96
learning_decay_step=1000

epoch=1000
batch_size=32

f0.type=conv2d_pool
f0.input=input[0],input[1]
f0.shape=5,5,3,64
f0.pool_type=avg
f0.pool_size=3
f0.pool_strides=2

stack.type=stack_conv2d
stack.input=f0
stack.use_residual=1
stack.shape=5,5,64,32
stack.stack_count=3

pool1.type=pooling
pool1.input=stack
pool1.pool_type=max
pool1.pool_size=2
pool1.pool_strides=2

reshape.type=reshape
reshape.input=pool1
reshape.shape=-1,100352

relu.type=full_connect_op
relu.input=reshape
relu.op=relu
relu.l2wd=0.001
relu.n_in=100352
relu.n_out=2048
relu.weight_stddev=0.04
relu.bias_init=0.1

relu2.type=full_connect_op
relu2.input=relu
relu2.op=relu
relu2.l2wd=0.001
relu2.n_in=2048
relu2.n_out=256
relu2.weight_stddev=0.04
relu2.bias_init=0.1

dot.type=dot
dot.input=relu2

softmax_in.type=full_connect
softmax_in.input=dot
softmax_in.n_in=256
softmax_in.n_out=2
softmax_in.l2wd=0.00
softmax_in.weight_stddev=0.0052

out.type=softmax
out.input=softmax_in

cost.type=softmax_entropy
cost.input=softmax_in,__label__

